<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.springblade.vessel.mapper.ShipInformationResourceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="shipInformationResourceResultMap" type="org.springblade.vessel.entity.ShipInformationResource">
        <result column="id" property="id"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="status" property="status"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="ship_id" property="shipId"/>
        <result column="ship_no" property="shipNo"/>
        <result column="parent_id" property="parentId"/>
        <result column="ancestors" property="ancestors"/>
        <result column="type" property="type"/>
        <result column="resource_name" property="resourceName"/>
    </resultMap>

    <resultMap id="resourceVOResultMap" type="org.springblade.vessel.vo.ShipInformationResourceVO">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="ancestors" property="ancestors"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="has_children" property="hasChildren"/>
    </resultMap>

    <select id="selectShipInformationResourcePage" resultMap="shipInformationResourceResultMap">
        select * from ship_information_resource where is_deleted = 0
    </select>


    <select id="lazyList" resultMap="resourceVOResultMap">
        SELECT
        res.* ,
        (
        SELECT
        CASE WHEN count(1) > 0 THEN 1 ELSE 0 END
        FROM
        ship_information_resource
        WHERE
        parent_id = res.id and is_deleted = 0
        ) AS "has_children"
        FROM
        ship_information_resource res
        WHERE res.is_deleted = 0
        <if test="param1!=null">
            and res.parent_id = #{param1}
        </if>
        <if test="param2.resourceName!=null and param2.resourceName!=''">
            and res.resource_name like concat(concat('%', #{param2.resourceName}),'%')
        </if>
        <if test="param2.type!=null">
            and res.type = #{param2.type}
        </if>
        ORDER BY res.id
    </select>

    <resultMap id="treeNodeResultMap" type="org.springblade.core.tool.node.TreeNode">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="title" property="title"/>
        <result column="value" property="value"/>
        <result column="key" property="key"/>
        <result column="has_children" property="hasChildren"/>
    </resultMap>

    <select id="lazyTree" resultMap="treeNodeResultMap" >
        SELECT
        res.id,
        res.parent_id,
        res.resource_name AS title,
        res.id AS "value",
        res.id AS "key",
        (
        SELECT
        CASE WHEN count(1) > 0 THEN 1 ELSE 0 END
        FROM
        ship_information_resource
        WHERE
        parent_id = res.id and is_deleted = 0
        ) AS "has_children"
        FROM
        ship_information_resource
        WHERE
        res.parent_id = #{param1} AND res.is_deleted = 0
        ORDER BY id
    </select>

    <select id="tree" resultMap="treeNodeResultMap">
        select id, ship_id, parent_id, resource_name as title, id as "value", id as "key" from ship_information_resource where is_deleted = 0 and status = 1
        ORDER BY id
    </select>

</mapper>
